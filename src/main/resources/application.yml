logging:
  level:
    root: INFO
    softmagic.backoffice: DEBUG
#example:
#  kafka:
#    consumer-enabled: ${consumer-enabled:true}

spring:
  application:
    name: back-office
  profiles:
    active: dev
  datasource:
      url: jdbc:postgresql://localhost:5432/postgres
      username: postgres
      password: postgres
      driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    properties:
      hibernate.jdbc.batch_size: 100
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  mvc:
    hiddenmethod:
      filter:
        enabled: true
  kafka:
    bootstrap-servers: ${kafka_bootstrap_servers:localhost:29092}
    consumer:
      auto-offset-reset: earliest
      group-id: example
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 1
      fetch-max-wait: 36000
      enable-auto-commit: false
      client-id: example
    producer:
      client-id: example
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 2
    listener:
      poll-timeout: 1800000
      concurrency: 1
      ack-mode: manual_immediate